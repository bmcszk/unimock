---
description: 
globs: 
alwaysApply: true
---
# Requirement Workflow

This document MANDATES the workflow for managing requirements and their corresponding test scenarios. AI Agents MUST ALWAYS adhere to this workflow.

## Documentation of Requirements & Test Scenarios

1.  **Requirements File (`docs/requirements.md`):**
    *   ALL functional and non-functional requirements MUST be documented in `docs/requirements.md`.
    *   AI Agent MUST ALWAYS consult and update `docs/requirements.md` BEFORE starting work on ANY new feature or change.

2.  **Test Scenarios File (`docs/scenarios.md`):**
    *   For EVERY requirement in `docs/requirements.md`, corresponding test scenarios (covering common and edge cases) MUST be documented in `docs/scenarios.md`.
    *   AI Agent MUST use `docs/scenarios.md` as a MANDATORY checklist for test coverage.

## Test Coverage for Requirements

-   ALL functional requirements in `docs/requirements.md` MUST have corresponding test scenarios documented in `docs/scenarios.md`.
-   EVERY test scenario listed in `docs/scenarios.md` MUST be covered by an End-to-End (E2E) test.
-   AI Agent MUST ALWAYS verify E2E test coverage when implementing or modifying E2E tests related to a requirement.

## AI Assistant Responsibilities for Requirements

-   AI Agent MUST ALWAYS consider and update ALL relevant documentation (`docs/requirements.md`, `docs/scenarios.md`) for ANY task. This INCLUDES:
    -   Defining test scenarios in `docs/scenarios.md` for new or modified requirements.
    -   Ensuring E2E test coverage for ALL scenarios in `docs/scenarios.md`.

## Git Workflow for Requirements

-   **Branching:**
    -   For EVERY requirement change (new feature or fix), a new branch MUST be created from `master`.
    -   Branch naming convention MUST be: `feature/requirement-name` or `fix/fix-name` (e.g., `feature/user-auth`, `fix/login-csrf`).
-   **Committing and Pushing:**
    *   ALL tasks related to the requirement MUST be committed and pushed to this feature/fix branch.
    *   AI Agent MUST follow `task_workflow.mdc` for task completion and version control for individual tasks.
-   **Pull Requests:**
    -   ONLY AFTER ALL tasks for the requirement are **Done** (or **Skipped**), AND all associated work is committed and pushed to the feature/fix branch, AI Agent MUST create a Pull Request to merge the feature/fix branch into `master`.
    -   AI Agent MUST use the `gh pr create` command. Example: `gh pr create --base master --head your-branch --title "Feature: X" --body "Details."`. Title and body MUST be descriptive.
