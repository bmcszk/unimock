# Example scenarios file for Unimock
# This file demonstrates how to define scenarios that will be loaded at server startup

scenarios:
  # GET scenario for a specific user
  - uuid: "example-user-001"
    method: "GET"
    path: "/api/users/123"
    status_code: 200
    content_type: "application/json"
    data: |
      {
        "id": "123",
        "name": "John Doe",
        "email": "john.doe@example.com",
        "role": "admin"
      }

  # POST scenario for creating a user
  - uuid: "example-user-create"
    method: "POST"
    path: "/api/users"
    status_code: 201
    content_type: "application/json"
    location: "/api/users/456"
    headers:
      X-User-ID: "456"
    data: |
      {
        "id": "456",
        "name": "Jane Smith",
        "email": "jane.smith@example.com",
        "role": "user"
      }

  # HEAD scenario for checking user existence
  - uuid: "example-user-head"
    method: "HEAD"
    path: "/api/users/789"
    status_code: 200
    content_type: "application/json"
    headers:
      X-User-ID: "789"
      Last-Modified: "Wed, 21 Oct 2015 07:28:00 GMT"

  # Error scenario for non-existent resource
  - uuid: "example-user-not-found"
    method: "GET"
    path: "/api/users/999"
    status_code: 404
    content_type: "application/json"
    data: |
      {
        "error": "User not found",
        "code": "USER_NOT_FOUND",
        "details": "User with ID 999 does not exist"
      }

  # Product scenario with different content type
  - uuid: "example-product-xml"
    method: "GET"
    path: "/products/abc123"
    status_code: 200
    content_type: "application/xml"
    data: |
      <?xml version="1.0" encoding="UTF-8"?>
      <product>
        <sku>abc123</sku>
        <name>Example Product</name>
        <price>29.99</price>
        <category>Electronics</category>
      </product>

  # Wildcard scenario
  - uuid: "example-orders-wildcard"
    method: "GET"
    path: "/api/orders/*"
    status_code: 200
    content_type: "application/json"
    data: |
      {
        "order_id": "auto-generated",
        "status": "processing",
        "items": []
      }