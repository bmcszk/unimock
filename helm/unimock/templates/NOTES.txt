Thank you for installing {{ .Chart.Name }}.

Your release is named {{ .Release.Name }}.

To check if the deployment is ready, run:
  kubectl get deployment {{ include "unimock.fullname" . }}

To access your Unimock instance:

{{- if .Values.ingress.enabled }}
  Access the application via your configured Ingress:
  {{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
  {{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "unimock.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status using: kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "unimock.fullname" . }}
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "unimock.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ include "unimock.fullname" . }} {{ .Values.service.port }}:{{ .Values.service.port }}
  echo "Visit http://localhost:{{ .Values.service.port }} to access the Unimock server"
{{- end }}

To check the health of your Unimock instance:
  curl http://localhost:{{ .Values.service.port }}/_uni/health

To see metrics:
  curl http://localhost:{{ .Values.service.port }}/_uni/metrics 
